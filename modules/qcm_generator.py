import streamlit as st
import openai
import os

def run_qcm_generator():
    st.title("üìù G√©n√©rateur intelligent de QCM")
    st.markdown("Cr√©e automatiquement des QCM cibl√©s √† partir de ton cours ou des notions √† revoir.")

    contenu = st.text_area("‚úçÔ∏è Colle ici ton cours ou tes erreurs", height=300)
    nb_qcm = st.slider("üß™ Nombre de QCM √† g√©n√©rer", 1, 20, 5)
    
    # üîÄ Nouvelle option d'affichage
    mode_affichage = st.radio(
        "üìö Mode d'affichage du corrig√© :",
        ["‚û°Ô∏è Corrig√© directement apr√®s chaque QCM", "‚û°Ô∏è Corrig√© global √† la fin"]
    )

    bouton = st.button("üîÑ G√©n√©rer les QCM")

    if bouton and contenu.strip():
        with st.spinner("G√©n√©ration en cours... ‚è≥"):
            client = openai.OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

            # Prompt selon le mode choisi
            if mode_affichage == "‚û°Ô∏è Corrig√© directement apr√®s chaque QCM":
                prompt = f"""
Tu es un expert en p√©dagogie m√©dicale. √Ä partir de ce qui est demaand√© , g√©n√®re {nb_qcm} QCM de type ECN avec une seule bonne r√©ponse par question.

Apr√®s chaque question, donne :
- La bonne r√©ponse (ex. **R√©ponse : B**)
- Une explication p√©dagogique courte (1 √† 3 lignes)

Format :
**Question 1 :**
Quel est ... ?
- A. ...
- B. ...
- C. ...
- D. ...
**R√©ponse : B**
**Explication :** ...

Texte :
{contenu}
"""
            else:
                prompt = f"""
Tu es un expert en p√©dagogie m√©dicale. √Ä partir du texte suivant, g√©n√®re {nb_qcm} QCM de type ECN avec une seule bonne r√©ponse par question.

Affiche d'abord tous les QCM sans r√©ponse.
Puis, en seconde partie, affiche les bonnes r√©ponses avec une explication br√®ve pour chacune.

Format :
**Partie 1 ‚Äì QCM :**
...

**Partie 2 ‚Äì Corrig√© :**
Question 1 : R√©ponse B ‚Äì Explication : ...

Texte :
{contenu}
"""

            response = client.chat.completions.create(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": "Tu es un assistant m√©dical expert en QCM pour √©tudiants."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.4
            )

            st.markdown("---")
            st.subheader("üìã R√©sultats :")
            st.markdown(response.choices[0].message.content)
